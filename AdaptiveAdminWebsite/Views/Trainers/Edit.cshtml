@model FamtasticPublicWebsite.DataAccess.EntityFramework.Trainer

@{
	ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Trainers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Trainer</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.ID)

		<div class="form-group">
			@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Headline, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Headline, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Headline, "", new { @class = "text-danger" })
			</div>
		</div>

		@*<div class="form-group">
				@Html.LabelFor(model => model.ProfileImage, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.ProfileImage, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.ProfileImage, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ProfileBanner, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.ProfileBanner, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.ProfileBanner, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Intro, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Intro, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Intro, "", new { @class = "text-danger" })
				</div>
			</div>*@

		<div class="form-group">
			@Html.LabelFor(model => model.Intro, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.TextAreaFor(m => m.Intro, new { @id = "summernote" })
				@Html.ValidationMessageFor(model => model.Intro, "", new { @class = "text-danger" })
				<script>
					$('#summernote').summernote({
						placeholder: '',
						tabsize: 2,
						height: 250,
						fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New'],
						toolbar: [
							['style', ['style']],
							['font', ['bold', 'underline', 'clear']],
							['fontname', ['fontname']],
							['fontsize', ['fontsize']],
							['color', ['color']],
							['para', ['ul', 'ol', 'paragraph']],
							['table', ['table']],
							['insert', ['link', 'picture', 'video']],
							['view', ['fullscreen', 'codeview', 'help']],
						],
					});
				</script>
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.ProfileImage, htmlAttributes: new { @class = "control-label col-md-3" })
			<div class="col-md-6">
				<input type="file" name="ProfileImage" id="ProfileImage" accept=".png,.jpg,.jpeg,.gif,.tif" />
			</div>
			<label>Current: </label><img class="img-fluid w-25" src="@Url.Action("RenderProfileImage", "Trainers", new { id = Model.ID})" alt="image" />
			<input type="hidden" name="ProfileImage" id="ProfileImage" value="@ViewBag.CurrentImgProfile" />
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.ProfileBanner, htmlAttributes: new { @class = "control-label col-md-3" })
			<div class="col-md-6">
				<input type="file" name="ProfileBanner" id="ProfileBanner" accept=".png,.jpg,.jpeg,.gif,.tif" />
			</div>
			<label>Current: </label><img class="img-fluid w-25" src="@Url.Action("RenderProfileBanner", "Trainers", new { id = Model.ID})" alt="image" />
			<input type="hidden" name="ProfileBanner" id="ProfileBanner" value="@ViewBag.CurrentImgBanner" />
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.LinkedIn, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.LinkedIn, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.LinkedIn, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Twitter, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Twitter, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Twitter, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Facebook, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Facebook, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Facebook, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.UpdateDate, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.UpdateDate, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.UpdateDate, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
