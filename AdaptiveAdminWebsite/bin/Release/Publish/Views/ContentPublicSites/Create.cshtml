@model AdaptivePublicWebsite.DataAccess.EntityFramework.ContentPublicSite

@{
	ViewBag.Title = "Create";
}

<h2>New Content</h2>

@using (Html.BeginForm("Create", "ContentPublicSites", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken()

<div class="form-horizontal">
	<h4>ContentPublicSite</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<div class="form-group">
		@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.NavLink, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.NavLink, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.NavLink, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.PageText, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.TextAreaFor(m => m.PageText, new { @id = "summernote" })
			@Html.ValidationMessageFor(model => model.PageText, "", new { @class = "text-danger" })
			<script>
				$('#summernote').summernote({
					placeholder: '',
					tabsize: 2,
					height: 250,
					fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New'],
					toolbar: [
						['style', ['style']],
						['font', ['bold', 'underline', 'clear']],
						['fontname', ['fontname']],
						['fontsize', ['fontsize']],
						['color', ['color']],
						['para', ['ul', 'ol', 'paragraph']],
						['table', ['table']],
						['insert', ['link', 'picture', 'video']],
						['view', ['fullscreen', 'codeview', 'help']],
					],
				});
			</script>
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.PageImage, htmlAttributes: new { @class = "control-label col-md-3" })
		<div class="col-md-6">
			<input type="file" name="pageImage" id="PageImage" accept=".png,.jpg,.jpeg,.gif,.tif" />
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.IsUniqueServicePage, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.IsUniqueServicePage, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.IsUniqueServicePage, "", new { @class = "text-danger" })
		</div>
	</div>

	@Html.HiddenFor(model => model.CreatedBy)
	@Html.HiddenFor(model => model.CreateDate)
	@Html.HiddenFor(model => model.UpdatedBy)
	@Html.HiddenFor(model => model.UpdateDate)

	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Create" class="btn btn-default" />
		</div>
	</div>
</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
